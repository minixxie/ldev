#!/bin/bash

ldevRoot="$HOME/.ldev"
k8sProj="k8s-services"
mysql="infra-mysql@8.2.0"
redis="infra-redis-cluster"
mongo="infra-mongodb@7.0.5"

function help() {
    cat <<EOF
Usage: $0 arg1 arg2 arg3 ...
Arguments:"
├─ help.....show this help message
│  ├─ k8s...show help message for argument 'k8s'
│  └─ gpu...show help message for argument 'gpu'
├─ init.....initialize files for ldev to use under $ldevRoot
├─ k8s......get/up/down for k8s with colima/k3s
│  ├─ get...get info of k8s
│  ├─ up....start k8s
│  ├─ down..stop k8s
│  └─ redo..recreate k8s
├─ gpu......get/up/down for nvidia gpu operator
│  ├─ get...get info of nvidia gpu operator
│  ├─ up....start nvidia gpu operator
│  └─ down..stop nvidia gpu operator
├─ mysql....get/up/down for mysql
│  ├─ get...get info of mysql
│  ├─ up....start mysql
│  ├─ down..stop mysql
│  └─ cli...invoke mysql cli
├─ redis....get/up/down for redis-cluster
│  ├─ get...get info of redis-cluster
│  ├─ up....start redis-cluster
│  ├─ down..stop redis-cluster
│  └─ cli...invoke redis-cluster cli
├─ mongo....get/up/down for mongodb
│  ├─ get...get info of mongodb
│  ├─ up....start mongodb
│  ├─ down..stop mongodb
│  └─ cli...invoke mongodb cli
EOF
}

function init() {
    if ! [ -d "$ldevRoot" ]; then
        mkdir -p "$ldevRoot"
        chmod 700 "$ldevRoot"
    fi
    if ! [ -d "$ldevRoot"/"$k8sProj" ]; then
        cd "$ldevRoot" && git clone https://github.com/minixxie/k8s-services.git > /dev/null
    fi
    cd "$ldevRoot"/"$k8sProj" && git pull --rebase
    echo "OK"
}
function check_init() {
    if ! [ -d "$ldevRoot" ]; then
        echo >&2 "ERR: please run this first: $0 init"
	exit 1
    fi
    if ! [ -d "$ldevRoot"/"$k8sProj" ]; then
        echo >&2 "ERR: please run this first: $0 init"
	exit 1
    fi
}

function k8s_get() {
    echo "# kubectl get node -o wide"
    kubectl get node -o wide
    echo ""
    echo "# kubectl get ns"
    kubectl get ns
}

function k8s_up() {
    true
}

function k8s_down() {
    true
}

function k8s_redo() {
    check_init
    cd "$ldevRoot"/"$k8sProj" && make -s k8s-redo
}

function gpu_get() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/nvidia-gpu-operator && make get
}
function gpu_up() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/nvidia-gpu-operator && make local wait test
}
function gpu_down() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/nvidia-gpu-operator && make down
}
function mysql_get() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mysql" && make get
}
function mysql_up() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mysql" && make local wait test
}
function mysql_down() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mysql" && make down
}
function mysql_cli() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mysql" && make cli
}
function redis_get() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$redis" && make get
}
function redis_up() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$redis" && make local wait test
}
function redis_down() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$redis" && make down
}
function redis_cli() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$redis" && make cli
}
function mongo_get() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mongo" && make get
}
function mongo_up() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mongo" && make local wait test
}
function mongo_down() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mongo" && make down
}
function mongo_cli() {
    check_init
    cd "$ldevRoot"/"$k8sProj"/"$mongo" && make cli
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "help" ]; then
    if [ "$2" == "k8s" ]; then
        help
    else
        help
	exit 1
    fi
elif [ "$1" == "init" ]; then
    init
elif [ "$1" == "k8s" ]; then
    if [ "$2" == "get" ]; then
        k8s_get
    elif [ "$2" == "up" ]; then
        k8s_up
    elif [ "$2" == "down" ]; then
        k8s_down
    elif [ "$2" == "redo" ]; then
        k8s_redo
    else
        help
	exit 1
    fi
elif [ "$1" == "gpu" ]; then
    if [ "$2" == "get" ]; then
        gpu_get
    elif [ "$2" == "up" ]; then
        gpu_up
    elif [ "$2" == "down" ]; then
        gpu_down
    else
        help
    fi
elif [ "$1" == "mysql" ]; then
    if [ "$2" == "get" ]; then
        mysql_get
    elif [ "$2" == "up" ]; then
        mysql_up
    elif [ "$2" == "down" ]; then
        mysql_down
    elif [ "$2" == "cli" ]; then
        mysql_cli
    else
        help
    fi
elif [ "$1" == "redis" ]; then
    if [ "$2" == "get" ]; then
        redis_get
    elif [ "$2" == "up" ]; then
        redis_up
    elif [ "$2" == "down" ]; then
        redis_down
    elif [ "$2" == "cli" ]; then
        redis_cli
    else
        help
    fi
elif [ "$1" == "mongo" ]; then
    if [ "$2" == "get" ]; then
        mongo_get
    elif [ "$2" == "up" ]; then
        mongo_up
    elif [ "$2" == "down" ]; then
        mongo_down
    elif [ "$2" == "cli" ]; then
        mongo_cli
    else
        help
    fi
else
    help
    exit 1
fi
